{"body":"DjangoPyPI 2\r\n============\r\n\r\nDjangoPyPI is a Django application that provides a re-implementation of the \r\n`Python Package Index <http://pypi.python.org>`_.\r\nUsing Twitter Bootstrap for UI, forked from the original DjangoPyPi project,\r\nDjangoPyPi2 provides an easy to use and manage interface.\r\n\r\nInstallation\r\n------------\r\n\r\nDjangoPyPi2 is a self-contained Django project along with its apps. If you want\r\nfine-grained control, you can looks at the sources of the apps found in the\r\n``djangopypi2.apps`` package.\r\n\r\nThe most simple way to install ``djangopypi2`` is by:\r\n\r\n    # Make sure we run with Bash, create a virtualenv and install packages\r\n    $ bash\r\n    $ virtualenv pypi-site\r\n    $ source pypi-site/bin/activate\r\n    $ pip install django gunicorn djangopypi2\r\n\r\n    # Configure our installation (all data is kept in ~/.djangopypi2)\r\n    $ manage-pypi-site syncdb\r\n    $ manage-pypi-site collectstatic\r\n    $ manage-pypi-site loaddata initial\r\n\r\nThat's it, we're now ready to run our server.\r\n\r\nRunning\r\n-------\r\nIt's easiest to see our server running by executing\r\n\r\n    $ gunicorn_django djangopypi2.website.settings\r\n\r\nThen surfing to http://localhost:8000/ .\r\n\r\nFor a permanent setup, simply create a ``supervisor <http://supervisord.org/>``\r\nconfiguration:\r\n\r\n    [program:djangopypi2]\r\n    user = www-data\r\n    directory = /path/to/virtualenv\r\n    command = /path/to/virtualenv/bin/gunicorn_django djangopypi2.website.settings\r\n\r\nPackage upload directory\r\n++++++++++++++++++++++++\r\n\r\nPackages are uploaded to ``~/.djangopypi2/media/dists/`` by default.\r\n\r\nYou can change this setting by setting up a Django project with more specific\r\nsettings, or have a look at the admin interface's ``Global Configuration``\r\nsection to see if you configure your desired behavior in there.\r\n\r\nUploading to your PyPI\r\n----------------------\r\n\r\nAssuming you are running your Django site locally for now, add the following to \r\nyour ``~/.pypirc`` file::\r\n\r\n    [distutils]\r\n    index-servers =\r\n        pypi\r\n        local\r\n\r\n    [pypi]\r\n    username:user\r\n    password:secret\r\n\r\n    [local]\r\n    username:user\r\n    password:secret\r\n    repository:http://localhost:8000/pypi/\r\n\r\nUploading a package: Python >=2.6\r\n_________________________________\r\n\r\nTo push the package to the local pypi::\r\n\r\n    $ python setup.py register -r local sdist upload -r local\r\n\r\n\r\nUploading a package: Python <2.6\r\n________________________________\r\n\r\nIf you don't have Python 2.6 please run the command below to install the \r\nbackport of the extension for multiple repositories::\r\n\r\n     $ easy_install -U collective.dist\r\n\r\nInstead of using register and dist command, you can use ``mregister`` and \r\n``mupload`` which are a backport of python 2.6 register and upload commands \r\nthat supports multiple servers.\r\n\r\nTo push the package to the local pypi::\r\n\r\n    $ python setup.py mregister -r local sdist mupload -r local\r\n\r\nInstalling a package with pip\r\n-----------------------------\r\n\r\nTo install your package with pip::\r\n\r\n $ pip install -i http://my.pypiserver.com/simple/ <PACKAGE>\r\n\r\nIf you want to fall back to PyPi or another repository in the event the\r\npackage is not on your new server, or in particular if you are installing a number\r\nof packages, some on your private server and some on another, you can use\r\npip in the following manner::\r\n\r\n $ pip install -i http://localhost:8000/simple/ \\\r\n   --extra-index-url=http://pypi.python.org/simple/ \\\r\n   -r requirements.txt\r\n\r\n(substitute your djangopypi2 server URL for the ``localhost`` one in this example)\r\n\r\nThe downside is that each install of a package hosted on the repository in\r\n``--extra-index-url`` will start with a call to the first repository which\r\nwill fail before pip falls back to the alternative.\r\n\r\nCopyright and Credits\r\n---------------------\r\nOriginally written by Benjamin Liles from http://github.com/benliles/djangopypi\r\n\r\nThis software uses Twitter Bootstrap for UI: http://twitter.github.com/bootstrap/\r\n\r\nFavicon taken from http://pypi.python.org/favicon.ico\r\n","tagline":"Simple PyPI server written in django.","google":"UA-35278801-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Djangopypi2"}